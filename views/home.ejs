<!DOCTYPE html>
<html lang="en">

<head>
  <% include header/head %>

  <script>
    // Bar Graph Function Creation
    // Creates a new Bar Graph using the data provided 
    // Into the context object given as argument
    function BarGraph(div, width, height, color, gcolor) {

      // Creating the context of the graph #1
      var div = document.getElementById(div);
      var canvas = document.createElement('canvas');
      div.appendChild(canvas);
      var context = canvas.getContext("2d");

      // Private properties and methods
      var chart = this;
      chart.width = width;
      chart.height = height;
      chart.margin = 5;
      // Colors
      chart.color = color;
      chart.gradientColor = gcolor;
      chart.backgroundColor = "#fff";
      // Data
      chart.dates = [];
      chart.times = [];

      this.resize = function (width, height) {
        chart.width = width;
        chart.height = height;
        context.width = width;
        context.height = height;
      }

      // Draw method updates the canvas with the current display
      this.draw = function (arr) {

        let numOfBars = arr.length;
        let barWidth;
        let barHeight;
        let border = 2;
        let ratio;
        let maxBarHeight;
        let gradient;
        let graphAreaX = 0;
        let graphAreaY = 0;
        let graphAreaWidth = chart.width;
        let graphAreaHeight = chart.height;
        var i;
        var largestValue;

        // Set Canva width & height
        context.canvas.width = chart.width;
        context.canvas.height = chart.height;

                // If x axis labels exist then make room	
                if (chart.dates.length) {
                    graphAreaHeight -= 40;
                }

        // Calculate dimensions of the bar
        barWidth = graphAreaWidth / numOfBars - chart.margin * 2;
        maxBarHeight = graphAreaHeight - 25;

        // Determine the largest value in the bar array
        largestValue = 0;
        for (i = 0; i < arr.length; i += 1) {
          if (arr[i] > largestValue) {
            largestValue = arr[i];
          }
        }

        // For each bar
        for (i = 0; i < arr.length; i += 1) {
          // Set the ratio of current bar compared to the maximum
          ratio = arr[i] / largestValue;
          barHeight = ratio * maxBarHeight;


          // Draw bar background
          context.fillStyle = "#333";
          context.fillRect(chart.margin + i * chart.width / numOfBars, graphAreaHeight - barHeight, barWidth, barHeight);

          // Draw bar color if it is large enough to be visible
          if (barHeight > border * 2) {
            // Create gradient
            gradient = context.createLinearGradient(0, 0, 0, graphAreaHeight);
            gradient.addColorStop(1 - ratio, chart.color);
            gradient.addColorStop(1, chart.gradientColor);

            context.fillStyle = gradient;
            // Fill rectangle with gradient
            context.fillRect(chart.margin + i * chart.width / numOfBars + border,
              graphAreaHeight - barHeight + border,
              barWidth - border * 2,
              barHeight - border * 2);
          }

                    // Write bar value
                    context.fillStyle = "#ffffff";
                    context.font = "bold 16px arial";
                    context.textAlign = "center";
                    // Use try / catch to avoid error looping
                    try {
                        context.fillText(parseInt(arr[i], 10),
                            i * chart.width / numOfBars + (chart.width / numOfBars) / 2,
                            graphAreaHeight - barHeight - 10);
                    } catch (ex) { }
                    // Draw bar label if it exists
                    if (chart.dates[i]) {
                        // Use try / catch to avoid error looping			
                        context.fillStyle = "#ffffff";
                        context.font = "bold 12px arial";
                        context.textAlign = "center";
                        try {
                            context.fillText(chart.dates[i], i * chart.width / numOfBars + (chart.width / numOfBars) / 2, chart.height - 20);
                            context.fillText(chart.times[i], i * chart.width / numOfBars + (chart.width / numOfBars) / 2, chart.height - 5);
                        } catch (ex) { }
                    }
                }
            };
      }
  </script>
</head>

<body>
    <div class="view">
        <div class="mask rgba-black-strong">
            <!-- Navbar -->
            <header>
            <nav class="navbar navbar-expand-sm bg-dark navbar-dark">
                <a class="navbar-brand" href="#">MetricsJS</a>
                <span class="navbar-text">
                    By Maxime Tran & Louis Dev√®ze
                </span>


                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <span class="navbar-text">
                            Welcome <%= name %>
                        </span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/logout" onClick='document.location.href="/logout"'>
                            <i class="fas fa-power-off"></i>
                            Log out
                        </a>
                    </li>
                </ul>
            </nav>
        </header>

            <div style="margin:50px;">
                <div class="row">
                    <div class="col-sm-4">
                        <form action="/home/search" method="get">
                            <div class="card" style="margin-left: 30px; margin-right: 30px;  height: 300px">
                                <div class="card-header white-text" style="font-weight: bold; font-size: large;">Search a Metric
                                </div>
                                <div class="card-body">
                                    <div class="row" style="margin-top:20px">
                                        <div class="col-md-2 white-text" style="font-weight: bold;"> Date </div>
                                        <div class="col-md-4"> <input type="date" class="form-control" name="date">
                                        </div>
                                        <div class="col-md-2 white-text" style="font-weight: bold;"> Time </div>
                                        <div class="col-md-4"> <input type="time" class="form-control" name="time">
                                        </div>
                                    </div>
                                    <div class="row" style="margin-top:20px">
                                        <div class="col-md-2 white-text" style="font-weight: bold;"> Value </div>
                                        <div class="col-md-10 white-text">
                                            <% if(locals.metric){%>
                                            <h6><%-JSON.stringify(metric.value)%></h6>
                                            <%}%>

                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12" style="text-align: center"> <input type="submit"
                                        class="btn btn-primary" value="Search"> </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-sm-4">
                <form action="/home/insert" method="POST">
                    <div class="card" style="margin-left: 30px; margin-right: 30px; height: 300px">
                        <div class="card-header white-text" style="font-weight: bold; font-size: large;">Insert/Update a Metric
                        </div>
                        <div class="card-body">
                            <div class="row" style="margin-top:20px">
                                <div class="col-md-2 white-text" style="font-weight: bold;"> Date </div>
                                <div class="col-md-4"> <input type="date" class="form-control" name="date" required> </div>
                                <div class="col-md-2 white-text" style="font-weight: bold;"> Time </div>
                                <div class="col-md-4"> <input type="time" class="form-control" name="time" required>
                                </div>
                            </div>
                            <div class="row" style="margin-top:20px">
                                <div class="col-md-2 white-text" style="font-weight: bold;"> Value </div>
                                <div class="col-md-10"> <input type="number" class="form-control" name="value" required> </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-12" style="text-align: center"> <input type="submit"
                                        class="btn btn-success" value="Insert / Update"> </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-sm-4">
                <form action="/home/delete" method="POST">
                    <div class="card" style="margin-left: 30px; margin-right: 30px; height: 300px">
                        <div class="card-header white-text" style="font-weight: bold; font-size: large;">Delete a Metric</div>
                        <div class="card-body">
                            <div class="row" style="margin-top:20px">
                                <div class="col-md-2 white-text" style="font-weight: bold;"> Date </div>
                                <div class="col-md-4"> <input type="date" class="form-control" name="date" required> </div>
                                <div class="col-md-2 white-text" style="font-weight: bold;"> Time </div>
                                <div class="col-md-4"> <input type="time"  class="form-control" name="time" required>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-6" style="text-align: center"> <input type="submit"
                                        class="btn btn-danger" value="Delete"> </div>         
                </form>
                                <form action="/home/deleteall" method="POST">
                                <div class="col-md-6" style="text-align: center"> <input type="submit"
                                        class="btn btn-danger" value="Delete All"> </div>
                                </form>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>

    <div style="margin:50px;">
                <div class="card" style="margin-left: 30px; margin-right: 30px; height: 350px;">
                    <div class="card-header" style="font-weight: bold; font-size: large;">
                        <div class="row">
                            <div class="col-sm-3 white-text">Metrics View</div>
                            <div class="col-sm-6"></div>
                            <div class="col-sm-3" style="text-align: right;">
                                <form action="/home" method="POST">
                                    <input type="button"class="btn btn-primary" value="Update">
                                </form> 
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="dataset" data-test=<%= JSON.stringify(dataset) %>></div>
                                        <div id="metrics" style="text-align: center;"></div>
                                        <script>
                                            var graph = new BarGraph('metrics', 400, 350, "blue", "cyan");
                                            function update() {
                                                let metrics = JSON.parse(document.getElementById("dataset").dataset.test);
                                                let dates = [];
                                                let times = [];
                                                let values = [];
                                                for (let i = 0; i < metrics.length; i++) {
                                                    let date = new Date(Number(metrics[i].timestamp));
                                                    let month = date.getUTCMonth() > 9 ? date.getUTCMonth() + 1 : "0" + (date.getUTCMonth() + 1);
                                                    let day = date.getUTCDate() > 9 ? date.getUTCDate() : ("0" + date.getUTCDate());
                                                    let min = date.getUTCMinutes() > 9 ? date.getUTCMinutes() : ("0" + date.getUTCMinutes());

                          dates.push(day + "-" + month + "-" + date.getUTCFullYear());
                          times.push(date.getUTCHours() + ":" + min);
                          values.push(metrics[i].value);
                        }
                        graph.dates = dates;
                        graph.times = times;
                        graph.resize(document.getElementById("metrics").offsetWidth * (3 / 4), 230)
                        graph.draw(values);
                      }
                      window.onresize = update;
                      window.onload = update
                    </script>
                  </div>
                </div>
              </div>

          </div>
        </div>
</body>

</html>